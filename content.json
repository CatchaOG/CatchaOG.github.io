{"meta":{"title":"隔壁老宋的博客","subtitle":null,"description":null,"author":"宋秀才","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"调起小程序导航","slug":"调起小程序导航","date":"2019-07-16T07:33:52.000Z","updated":"2019-07-16T09:44:06.893Z","comments":true,"path":"2019/07/16/调起小程序导航/","link":"","permalink":"http://yoursite.com/2019/07/16/调起小程序导航/","excerpt":"","text":"调起小程序导航ps:首先需要用户授权地理位置。（如果用户拒绝，可以通过弹窗，点击进入getsetting，强制获取授权，否则无法进入小程序） 直接上代码 123456789101112wx.getLocation(&#123;//获取当前经纬度 type: &apos;wgs84&apos;, //返回可以用于wx.openLocation的经纬度，官方提示bug: iOS 6.3.30 type 参数不生效，只会返回 wgs84 类型的坐标信息 success: function (res) &#123; wx.openLocation(&#123;//​使用微信内置地图查看位置。 latitude: 22.5542080000,//要去的纬度-地址 longitude: 113.8878770000,//要去的经度-地址 name: &quot;宝安中心A地铁口&quot;, address:&apos;宝安中心A地铁口&apos; &#125;) &#125; &#125;) 效果图如下","categories":[],"tags":[]},{"title":"实现深拷贝最简单的方法！","slug":"实现深拷贝最简单的方法！","date":"2019-02-23T04:00:54.000Z","updated":"2019-02-23T04:09:40.026Z","comments":true,"path":"2019/02/23/实现深拷贝最简单的方法！/","link":"","permalink":"http://yoursite.com/2019/02/23/实现深拷贝最简单的方法！/","excerpt":"","text":"实现深拷贝最简单的方法 直接上代码 123456789101112131415function deepCopy(obj) &#123; let _obj = JSON.stringify(obj); let objClone = JSON.parse(_obj); return objClone &#125; let arr = [0, 1, 2], arrClone = deepCopy(arr) arrClone[1] = 2 console.log(arr) console.log(arrClone)","categories":[],"tags":[]},{"title":"关于小程序中的text标签问题","slug":"关于小程序中的text标签问题","date":"2019-02-23T03:26:20.000Z","updated":"2019-02-23T03:52:49.625Z","comments":true,"path":"2019/02/23/关于小程序中的text标签问题/","link":"","permalink":"http://yoursite.com/2019/02/23/关于小程序中的text标签问题/","excerpt":"","text":"小程序text标签的各种坑 坑一：回车问题 &ensp;&ensp;在小程序中，text标签会将回车也写入内容，导致空行。所以，如果在我们并不需要空行的情况下，text标签中的内容应当写在一行。 坑二：font-size问题 &ensp;&ensp;如果我们需要使用view标签来包裹text标签，在需要设置font-size属性时，应当给view标签使用，否则可能会出现view标签莫名其妙的变高一点的问题。 坑三：首行缩进问题 &ensp;&ensp;text标签使用首行缩进text-indent属性无效，解决方案：我们可以使用view标签来进行代替。 vertical-align属性使用方法 &ensp;&ensp;vertical-align是垂直居中属性，之前在使用vertical-align属性的过程中，发现竟然不起作用。原因是，使用vertical-align属性的有条件的（就是这么任性）。一个是使用环境：父元素必须设置line-height行高属性；一个是使用vertical-align属性的元素必须是行内块或者行内元素（块级元素不起作用！）。","categories":[],"tags":[]},{"title":"关于小程序页面传值","slug":"关于小程序页面传值","date":"2019-01-21T02:17:34.000Z","updated":"2019-01-21T02:19:48.598Z","comments":true,"path":"2019/01/21/关于小程序页面传值/","link":"","permalink":"http://yoursite.com/2019/01/21/关于小程序页面传值/","excerpt":"","text":"小程序中的三种页面传值方式 url传值 本地储存 全局app对象存储 1、url传值通过url传值，需要通过option来取值 A页面传值 1234wx.navigateTo(&#123; url: &apos;test?id=1&apos;&#125;) B页面取值 123456789101112Page(&#123; data:&#123; id:&apos;&apos;, &#125;, onLoad: function(option)&#123; this.setData(&#123; id:option.id &#125;) &#125;&#125;) 2、本地存储 A页面传值 12wx.setStorageSync(&apos;username&apos;, &apos;张三&apos;) B页面取值 123456789101112Page(&#123; data:&#123; username:&apos;&apos;, &#125;, onLoad: function()&#123; var username = wx.getStorageSync(&apos;username&apos;) this.setData(&#123; username: username &#125;) &#125;&#125;) 3、将数据挂在到全局的app对象 A页面传值 123var app = getApp();app.username=&apos;ddd&apos;; B页面取值 123var app = getApp();var username = app.username;","categories":[],"tags":[]},{"title":"关于小程序setData","slug":"关于小程序setData","date":"2019-01-21T02:16:36.000Z","updated":"2019-01-21T02:19:19.645Z","comments":true,"path":"2019/01/21/关于小程序setData/","link":"","permalink":"http://yoursite.com/2019/01/21/关于小程序setData/","excerpt":"","text":"小程序setData的几种情况示例数据：123456789101112131415161718192021data&#123; isbig:true, dog&#123; age:15, color:red &#125;, arr:[&#123; index:0， name:小红 &#125;, &#123; index:1， name:小白 &#125;, &#123; index:2， name:小黑 &#125;], isArr:[] &#125; 情况一：修改data中的isbig属性，可通过属性名直接修改为fales 1234this.setData(&#123; isbig:fales &#125;) 情况二：修改data中dog属性里的age属性，需要以字符串的方式使用dog中的age属性 1234this.setData(&#123; &apos;dog.age&apos;: 10&#125;) 情况三：属性中的一部分是动态获取的，或者传参传进来的。需要先用变量将属性字符串拼接起来，然后用[]括号括起来即可 12345678910function(e) &#123; let index = e.currentTarget.dataset.index let namechange = &apos;arr[&apos; + index + &apos;].name&apos; this.setData(&#123; [namechange]: &apos;赋值name&apos;, &#125;) &#125; 情况四：当属性是个数组，并需要往数组里添加数据的时候。可先通过this获取属性，将数据修改，然后通过setData将数据进行渲染。 1234567891011function() &#123; var json = &#123; name:&apos;元素一&apos; &#125; this.data.isArr.push(json) this.setData(&#123; isArr: this.data.isArr &#125;)&#125;","categories":[],"tags":[]},{"title":"IE兼容问题","slug":"IE兼容问题","date":"2019-01-16T09:13:55.000Z","updated":"2019-01-16T09:55:10.064Z","comments":true,"path":"2019/01/16/IE兼容问题/","link":"","permalink":"http://yoursite.com/2019/01/16/IE兼容问题/","excerpt":"","text":"IE中a标签跳转不生效&emsp;&emsp;今天才知道，原来a标签里面嵌套input是不符合标准的，所以不能这么做，应该直接把a标签写成按钮的样式，把a标签设置为inline-block就可以了。 &emsp;&emsp;a标签中如果有button, 那么在IE下就不能跳转到herf的链接。而火狐和google中可以如下：此种在IE中不可以。这边的class中的属性只用于按钮样式。 1&lt;a href=&quot;jsp/manage/manage-context.jsp&quot;&gt;&lt;input type=&quot;button&quot; class=&quot;searchbut&quot; value=&quot;返 回&quot;&gt; &lt;/a&gt; &emsp;&emsp;而通过这样在IE中可行。但在火狐和google中则不可以 1&lt;input type=&quot;button&quot; onclick=&quot;window.location.href(&apos;/jsp/manage/manage-context.jsp&apos;)&quot; class=&quot;searchbut&quot; value=&quot;返 回&quot;&gt; &emsp;&emsp;下面这种则在IE,火狐，google中都可以 1&lt;input type=&quot;button&quot; onclick=&quot;window.location.href=&apos;/jsp/manage/manage-context.jsp&apos;&quot; class=&quot;searchbut&quot; value=&quot;返 回&quot;&gt;","categories":[],"tags":[]}]}