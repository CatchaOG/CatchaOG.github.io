{"meta":{"title":"隔壁老宋的博客","subtitle":null,"description":null,"author":"宋秀才","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"关于小程序页面传值","slug":"关于小程序页面传值","date":"2019-01-19T08:05:18.000Z","updated":"2019-01-19T08:25:21.721Z","comments":true,"path":"2019/01/19/关于小程序页面传值/","link":"","permalink":"http://yoursite.com/2019/01/19/关于小程序页面传值/","excerpt":"","text":"小程序中的三种页面传值方式 url传值 本地储存 全局app对象存储 1、url传值通过url传值，需要通过option来取值 A页面传值 1234wx.navigateTo(&#123; url: &apos;test?id=1&apos;&#125;) B页面取值 123456789101112Page(&#123; data:&#123; id:&apos;&apos;, &#125;, onLoad: function(option)&#123; this.setData(&#123; id:option.id &#125;) &#125;&#125;) 2、本地存储 A页面传值 12wx.setStorageSync(&apos;username&apos;, &apos;张三&apos;) B页面取值 123456789101112Page(&#123; data:&#123; username:&apos;&apos;, &#125;, onLoad: function()&#123; var username = wx.getStorageSync(&apos;username&apos;) this.setData(&#123; username: username &#125;) &#125;&#125;) 3、将数据挂在到全局的app对象 A页面传值 123var app = getApp();app.username=&apos;ddd&apos;; B页面取值 123var app = getApp();var username = app.username;","categories":[],"tags":[]},{"title":"关于小程序setData","slug":"关于小程序setData","date":"2019-01-19T06:32:08.000Z","updated":"2019-01-19T08:25:16.391Z","comments":true,"path":"2019/01/19/关于小程序setData/","link":"","permalink":"http://yoursite.com/2019/01/19/关于小程序setData/","excerpt":"","text":"小程序setData的几种情况示例数据：123456789101112131415161718192021data&#123; isbig:true, dog&#123; age:15, color:red &#125;, arr:[&#123; index:0， name:小红 &#125;, &#123; index:1， name:小白 &#125;, &#123; index:2， name:小黑 &#125;]， isArr:[] &#125; 情况一：修改data中的isbig属性，可通过属性名直接修改为fales 1234this.setData(&#123; isbig:fales &#125;) 情况二：修改data中dog属性里的age属性，需要以字符串的方式使用dog中的age属性 1234this.setData(&#123; &apos;dog.age&apos;: 10&#125;) 情况三：属性中的一部分是动态获取的，或者传参传进来的。需要先用变量将属性字符串拼接起来，然后用[]括号括起来即可 12345678910function(e) &#123; let index = e.currentTarget.dataset.index let namechange = &apos;arr[&apos; + index + &apos;].name&apos; this.setData(&#123; [namechange]: &apos;赋值name&apos;, &#125;) &#125; 情况四：当属性是个数组，并需要往数组里添加数据的时候。可先通过this获取属性，将数据修改，然后通过setData将数据进行渲染。 1234567891011function() &#123; var json = &#123; name:&apos;元素一&apos; &#125; this.data.isArr.push(json) this.setData(&#123; isArr: this.data.isArr &#125;)&#125;","categories":[],"tags":[]},{"title":"IE兼容问题","slug":"IE兼容问题","date":"2019-01-16T09:13:55.000Z","updated":"2019-01-16T09:55:10.064Z","comments":true,"path":"2019/01/16/IE兼容问题/","link":"","permalink":"http://yoursite.com/2019/01/16/IE兼容问题/","excerpt":"","text":"IE中a标签跳转不生效&emsp;&emsp;今天才知道，原来a标签里面嵌套input是不符合标准的，所以不能这么做，应该直接把a标签写成按钮的样式，把a标签设置为inline-block就可以了。 &emsp;&emsp;a标签中如果有button, 那么在IE下就不能跳转到herf的链接。而火狐和google中可以如下：此种在IE中不可以。这边的class中的属性只用于按钮样式。 1&lt;a href=&quot;jsp/manage/manage-context.jsp&quot;&gt;&lt;input type=&quot;button&quot; class=&quot;searchbut&quot; value=&quot;返 回&quot;&gt; &lt;/a&gt; &emsp;&emsp;而通过这样在IE中可行。但在火狐和google中则不可以 1&lt;input type=&quot;button&quot; onclick=&quot;window.location.href(&apos;/jsp/manage/manage-context.jsp&apos;)&quot; class=&quot;searchbut&quot; value=&quot;返 回&quot;&gt; &emsp;&emsp;下面这种则在IE,火狐，google中都可以 1&lt;input type=&quot;button&quot; onclick=&quot;window.location.href=&apos;/jsp/manage/manage-context.jsp&apos;&quot; class=&quot;searchbut&quot; value=&quot;返 回&quot;&gt;","categories":[],"tags":[]}]}